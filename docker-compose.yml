services:
  backend:
    container_name: backend-container
    build:
      context: ./backend
    ports:
      - "4000:3000"  # Пробрасываем порт 4000 на хосте на порт 3000 в контейнере (как указано в требованиях)
    depends_on:
      postgres:
        condition: service_healthy  # Ждать, пока PostgreSQL будет здоров
    env_file:
      - .env  # Загружаем переменные из файла .env
    environment:
      - NODE_ENV=production

  frontend:
    container_name: frontend-container
    build:
      context: ./frontend
    ports:
      - "8081:80"  # Пробрасываем порт 8081 на хосте на порт 80 в контейнере (как указано в требованиях)
    depends_on:
      - backend

  postgres:
    container_name: postgres-container
    image: postgres:12
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres-data: